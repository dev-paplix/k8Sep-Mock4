apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mongo-storageclass
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: Immediate


//pvc
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
  namespace: qq3
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
  storageClassName: mongo-storageclass

//statefulset
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: database
  namespace: qq3
spec:
  serviceName: mongo-service
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: MONGO_INITDB_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: MONGO_INITDB_ROOT_PASSWORD
        ports:
        - containerPort: 27017
          name: mongo
      - name: mongo-express
        image: mongo-express
        env:
        - name: ME_CONFIG_MONGODB_URL
          valueFrom:
            configMapKeyRef:
              name: mongo-configmap
              key: ME_CONFIG_MONGODB_URL
        - name: ME_CONFIG_BASICAUTH
          valueFrom:
            configMapKeyRef:
              name: mongo-configmap
              key: ME_CONFIG_BASICAUTH
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
        valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: MONGO_INITDB_ROOT_USERNAME
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: MONGO_INITDB_ROOT_PASSWORD
        ports:
        - containerPort: 8081
          name: mongo-express
      volumes:
      - name: mongo-storage
        persistentVolumeClaim:
          claimName: mongo-pvc