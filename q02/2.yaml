apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap-mongo
data:
  ME_CONFIG_MONGODB_URL: "mongodb://root:example@mongo:27017/"
  ME_CONFIG_BASICAUTH: "false"

---
apiVersion: v1
kind: Secret
metadata:
  name: secret
stringData:
  MONGO_INITDB_ROOT_USERNAME: dGVzdAo=
  MONGO_INITDB_ROOT_PASSWORD: dGVzdAo=
  ME_CONFIG_MONGODB_ADMINUSERNAME: dGVzdAo=
  ME_CONFIG_MONGODB_ADMINPASSWORD: dGVzdAo=
  ---

  apiVersion: v1
kind: Service
metadata:
  name: mongox-service
  labels:
    app: mongox-service
spec:
  ports:
  - port: 80
    name: mongox-service
  type: NodePort
  selector:
    app: mongox

    ---

    apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  labels:
    app: mongo-service
spec:
  ports:
  - port: 27017
    name: mongo-service
  clusterIP: None
  selector:
    app: mongo

    ---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  selector:
    matchLabels:
      app: mongo # has to match .spec.template.metadata.labels
  serviceName: mongo-service
  replicas: 1 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: mongo # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongo
        image: mongo:latest
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
          apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  selector:
    matchLabels:
      app: mongo # has to match .spec.template.metadata.labels
  serviceName: mongo-service
  replicas: 1 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: mongo # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      ccontainers:
      - name: mongo
        image: mongo:latest
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: secret-mongo
              key: MONGO_INITDB_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secret-mongo
              key: MONGO_INITDB_ROOT_PASSWORD
        ports:
        - containerPort: 27017
          name: mongo
        readinessProbe:
          tcpSocket:
            port: 27017
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 27017
          initialDelaySeconds: 15
          periodSeconds: 10
      containers:
      - name: mongo-express
        image: mongo-express:latest
        env:
      - name: ME_CONFIG_MONGODB_ADMINUSERNAME
        valueFrom:
          secretKeyRef:
            name: secret-mongo
            key: ME_CONFIG_MONGODB_ADMINUSERNAME
      - name: ME_CONFIG_MONGODB_ADMINPASSWORD
        valueFrom:
          secretKeyRef:
            name: secret-mongo
            key: ME_CONFIG_MONGODB_ADMINPASSWORD
      - name: ME_CONFIG_MONGODB_URL
        valueFrom:
          configMapKeyRef:
            name: configmap-mongo
            key: ME_CONFIG_MONGODB_URL
      - name: ME_CONFIG_BASICAUTH
        valueFrom:
          configMapKeyRef:
            name: configmap-mongo
            key: ME_CONFIG_BASICAUTH
      ports:
      - containerPort: 80
        name: mongo-express
      readinessProbe:
        tcpSocket:
        port: 80
        initialDelaySeconds: 15
        periodSeconds: 10
      livenessProbe:
        httpGet:
          port: 8080
          httpHeaders:
            - name: Accept
              value: ""
        initialDelaySeconds: 15
        periodSeconds: 10
