apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  selector:
    matchLabels:
      app: mongo # has to match .spec.template.metadata.labels
  replicas: 1 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: mongo # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongo
        image: mongo
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: secretq2
              key: MONGO_INITDB_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secretq2
              key: MONGO_INITDB_ROOT_PASSWORD
      - name: mongo-express
        image: mongo-express
        env:
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom:
            secretKeyRef:
              name: secretq2
              key: ME_CONFIG_MONGODB_ADMINPASSWORD
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            secretKeyRef:
              name: secretq2
              key: ME_CONFIG_MONGODB_ADMINUSERNAME
        - name: ME_CONFIG_BASICAUTH
          valueFrom:
            configMapKeyRef:
              name: configq2
              key: ME_CONFIG_BASICAUTH
        - name: ME_CONFIG_MONGODB_URL
          valueFrom:
            configMapKeyRef:
              name: configq2
              key: ME_CONFIG_MONGODB_URL
---
apiVersion: v1
kind: Secret
metadata:
  name: secretq2
data:
  MONGO_INITDB_ROOT_USERNAME: dGVzdA==
  MONGO_INITDB_ROOT_PASSWORD: dGVzdA==
  ME_CONFIG_MONGODB_ADMINUSERNAME: dGVzdA==
  ME_CONFIG_MONGODB_ADMINPASSWORD: dGVzdA==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: configq2
data:
  ME_CONFIG_MONGODB_URL: "mongodb://root:example@mongo:27017/"
  ME_CONFIG_BASICAUTH: "false"