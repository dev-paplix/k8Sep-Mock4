apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: my-volume
      volumes:
        - name: my-volume
          persistentVolumeClaim:
            claimName: my-persistent-volume-claim

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: httpd
  template:
    metadata:
      labels:
        app: httpd
    spec:
      containers:
        - name: httpd
          image: httpd:latest
          volumeMounts:
            - mountPath: /usr/local/apache2/htdocs
              name: my-volume
      volumes:
        - name: my-volume
          persistentVolumeClaim:
            claimName: my-persistent-volume-claim

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:12.20-bullseye
          env:
            - name: POSTGRES_DB
              value: mydatabase
            - name: POSTGRES_USER
              value: myuser
            - name: POSTGRES_PASSWORD
              value: mypassword
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: my-volume
      volumes:
        - name: my-volume
          persistentVolumeClaim:
            claimName: my-persistent-volume-claim
